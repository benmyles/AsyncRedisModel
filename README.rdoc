= async_redis_model

* http://github.com/benmyles/AsyncRedisModel

== DESCRIPTION:

Redis object mapper that runs inside the EventMachine reactor.

== FEATURES/PROBLEMS:

* Experimental, incomplete.

== SYNOPSIS:

  class Person < AsyncRedisModel::Base
    define_attribute :name
    define_attribute :age
    define_attribute :zip
  
    define_index_on  :zip
  end

  EventMachine::run do
    p = Person.new(:id => "benlm", :name => "Ben", :zip => 94107)
    p.create do |resp|
      if resp
        Person.index(:zip, 94107).members do |resp|
          puts resp.inspect
          EventMachine::stop_event_loop
        end
      end
    end
    
    found_person = Person.new(:id => "benlm")
    found_person.load do |resp|
      # now your attributes have loaded.
      # if the record was not found you will get an
      # AsyncRedisModel::RecordNotFoundError exception
    end
  end

See tests for more examples.

== REQUIREMENTS:

* Ruby 1.9+ (probably)
* ActiveSupport & ActiveModel 3.0.0.beta2
* EventMachine 0.12.10

== INSTALL:

* No gem yet. Coming soon. See code under lib.

== LICENSE:

(The MIT License)

Copyright (c) 2010 Ben Myles

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.